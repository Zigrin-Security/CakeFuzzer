import hashlib
from typing import List, Optional, Protocol

from pydantic import BaseModel


class Vulnerability(BaseModel):
    def __hash__(self) -> int:
        return (
            int(
                hashlib.sha256(self.json(by_alias=True).encode("utf-8")).hexdigest(), 16
            )
            % 2**63
        )

    timestamp: float  # When?
    detection_result: str  # What?
    payload_guid: Optional[str]  # What exactly?
    scanner_id: int  # How?
    iteration_result_id: Optional[int]  # What caused it?


class VulnerabilitiesAdd(Protocol):
    async def add(self, finding: Vulnerability) -> None:
        ...


class VulnerabilitiesGet(Protocol):
    async def list_all(self) -> List[Vulnerability]:
        ...
