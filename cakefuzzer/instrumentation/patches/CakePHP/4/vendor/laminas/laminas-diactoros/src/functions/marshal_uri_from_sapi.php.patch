--- /var/www/cerebrate/vendor/laminas/laminas-diactoros/src/functions/marshal_uri_from_sapi.php.orig	2023-03-16 14:37:11.021064430 +0000
+++ /var/www/cerebrate/vendor/laminas/laminas-diactoros/src/functions/marshal_uri_from_sapi.php	2023-03-16 15:26:00.596545921 +0000
@@ -1,5 +1,5 @@
 <?php
-
+ // CakeFuzzerInstrumentation:patched
 declare(strict_types=1);
 
 namespace Laminas\Diactoros;
@@ -33,7 +33,7 @@
  * @param array $server SAPI parameters
  * @param array $headers HTTP request headers
  */
-function marshalUriFromSapi(array $server, array $headers): Uri
+function marshalUriFromSapi($server, array $headers): Uri
 {
     /**
      * Retrieve a header value from an array of headers using a case-insensitive lookup.
@@ -58,7 +58,7 @@
      * @return array Array of two items, host and port, in that order (can be
      *     passed to a list() operation).
      */
-    $marshalHostAndPort = static function (array $headers, array $server) use ($getHeaderFromArray): array {
+    $marshalHostAndPort = static function (array $headers, $server) use ($getHeaderFromArray): array {
         /**
          * @param string|array $host
          * @return array Array of two items, host and port, in that order (can be
@@ -138,7 +138,7 @@
      *
      * From Laminas\Http\PhpEnvironment\Request class
      */
-    $marshalRequestPath = static function (array $server): string {
+    $marshalRequestPath = static function ($server): string {
         // IIS7 with URL Rewrite: make sure we get the unencoded url
         // (double slash problem).
         $iisUrlRewritten = $server['IIS_WasUrlRewritten'] ?? null;
@@ -179,9 +179,9 @@
 
         return 'on' === strtolower($https);
     };
-    if (array_key_exists('HTTPS', $server)) {
+    if (__cakefuzzer_array_key_exists('HTTPS', $server)) {
         $https = $marshalHttpsValue($server['HTTPS']);
-    } elseif (array_key_exists('https', $server)) {
+    } elseif (__cakefuzzer_array_key_exists('https', $server)) {
         $https = $marshalHttpsValue($server['https']);
     } else {
         $https = false;
